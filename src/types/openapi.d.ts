/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/clients": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Tampilkan semua client */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Operasi berhasil. Mengembalikan daftar client. */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Client"][];
                    };
                };
            };
        };
        put?: never;
        /** Buat client baru */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        company?: string;
                        location?: string;
                        badanUsaha?: string;
                        picName?: string;
                        position?: string;
                    };
                };
            };
            responses: {
                /** @description Client berhasil dibuat. */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Client"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/projects": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Tampilkan semua project */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Operasi berhasil. Mengembalikan daftar project. */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Project"][];
                    };
                };
            };
        };
        put?: never;
        /** Buat project baru */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["ProjectFormData"];
                };
            };
            responses: {
                /** @description Project berhasil dibuat. */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Project"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/projects/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Tampilkan detail project */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Operasi berhasil. */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Project"];
                    };
                };
            };
        };
        /** Update project */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["ProjectFormData"];
                };
            };
            responses: {
                /** @description Project berhasil diupdate. */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Project"];
                    };
                };
            };
        };
        post?: never;
        /** Hapus project */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Project berhasil dihapus. */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/proposals": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Tampilkan semua proposal */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Operasi berhasil. Mengembalikan daftar proposal. */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Proposal"][];
                    };
                };
            };
        };
        put?: never;
        /** Buat proposal baru */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["ProposalFormData"];
                };
            };
            responses: {
                /** @description Proposal berhasil dibuat. */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Proposal"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/proposals/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Tampilkan detail proposal */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Operasi berhasil. */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Proposal"];
                    };
                };
            };
        };
        /** Update proposal */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["ProposalFormData"];
                };
            };
            responses: {
                /** @description Proposal berhasil diupdate. */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Proposal"];
                    };
                };
            };
        };
        post?: never;
        /** Hapus proposal */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Proposal berhasil dihapus. */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/proposal/templates": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get active proposal templates (complex + simple) */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["TemplateResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/proposals/{proposal}/content": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get proposal content snapshot */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    proposal: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ProposalContent"];
                    };
                };
            };
        };
        /** Upsert proposal content snapshot */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    proposal: number;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        data?: components["schemas"]["ProposalContent"];
                    };
                };
            };
            responses: {
                /** @description Saved */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/projects/{id}/proposals": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List proposals by project */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        /** Create proposal for project */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        version?: string;
                    };
                };
            };
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        Client: {
            /**
             * @description ID unik untuk client.
             * @example 1
             */
            id?: number;
            /**
             * @description Nama perusahaan client.
             * @example PT. Jaya Abadi
             */
            company?: string;
            /**
             * @description Lokasi atau kota client.
             * @example Jakarta
             */
            location?: string;
            /**
             * @description Bentuk badan usaha (PT, CV, dll).
             * @example PT
             */
            badanUsaha?: string;
            /**
             * @description Nama Person in Charge (PIC).
             * @example Budi Santoso
             */
            picName?: string;
            /**
             * @description Jabatan PIC.
             * @example Manager IT
             */
            position?: string;
            /**
             * Format: date-time
             * @description Waktu pembuatan record.
             */
            created_at?: string;
            /**
             * Format: date-time
             * @description Waktu update record terakhir.
             */
            updated_at?: string;
        };
        Project: {
            id?: number;
            client_id?: number;
            name?: string;
            analyst?: string;
            grade?: string;
            roles?: string[];
            /** Format: date-time */
            created_at?: string;
            /** Format: date-time */
            updated_at?: string;
        };
        ProjectFormData: {
            client_id: number;
            name: string;
            analyst: string;
            grade: string;
            roles?: string[];
        };
        Proposal: {
            id?: number;
            project_id?: number;
            version?: string;
            /** Format: date-time */
            created_at?: string;
            /** Format: date-time */
            updated_at?: string;
        };
        ProposalFormData: {
            project_id: number;
            version: string;
        };
        TemplateResponse: {
            complex?: {
                [key: string]: {
                    title?: string;
                    columns?: {
                        key?: string;
                        label?: string;
                        input_type?: string;
                        is_checkable?: boolean;
                    }[];
                    rows?: {
                        values?: Record<string, never>;
                    }[];
                    footnotes?: string[];
                };
            };
            simple?: {
                frontend_lang?: components["schemas"]["SimpleList"];
                app_info?: components["schemas"]["SimpleList"];
                account_availability?: components["schemas"]["SimpleList"];
                db_availability?: components["schemas"]["SimpleList"];
                db_info?: components["schemas"]["SimpleList"];
            };
        };
        SimpleList: {
            label?: string;
            is_other?: boolean;
        }[];
        ProposalContent: {
            systemEnvironment?: {
                mobile?: Record<string, never>;
                web?: Record<string, never>;
                simple?: Record<string, never>;
            };
            featureSales?: Record<string, never>[];
            featureAdmin?: Record<string, never>[];
            financialBreakdown?: Record<string, never>[];
            termsOfPayment?: Record<string, never>[];
            termsAndConditions?: string[];
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
